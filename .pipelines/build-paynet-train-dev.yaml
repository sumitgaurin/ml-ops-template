parameters:
- name: workspace_name
  displayName: "Azure ML Workspace Name"
  type: string
  default: "mlw-mldemo-dev-sind"
- name: resource_group_name
  displayName: "Resource Group Name"
  type: string
  default: "sgupta_sandbox"

pr: none
trigger: none

stages:
- stage: "Build"
  displayName: 'Build stage for the branch'
  jobs:
  - job: "Build_and_Test"
    displayName: "Runs the build and unit test"
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 60
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.10'
      inputs:
        versionSpec: '3.10.x'
        addToPath: true
        architecture: 'x64'
    
    - script: |
        echo 'Running python dependency installation ...'
        source ./.pipelines/pkg-requirements/install.sh
      displayName: 'Install Python dependencies'
      workingDirectory: '$(Build.SourcesDirectory)'

    - script: |
        echo 'Running unit test cases ...'
        pytest --cov=src --cov-report=html --cov-report=xml --junitxml=junit/TEST-results.xml ./tests
      displayName: 'Run unit test cases'
      workingDirectory: '$(Build.SourcesDirectory)'

    - task: PublishTestResults@2
      displayName: 'Collect unit test results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'

- stage: "Train"
  displayName: 'Run training for the paynet model'
  jobs:
    job: "Train_Paynet_Model"
    displayName: "Train paynet model"
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 600
    steps:
      - script: |
          echo "Workspace Name: '${{ parameters.workspace_name }}'"
          echo "Resource Group Name: '${{ parameters.resource_group_name }}'"
        displayName: 'Verify Parameter Values'

      - task: AzureCLI@2
        displayName: 'Verify workspace connection'
        inputs:
          azureSubscription: '$(AZURE_RM_SVC_CONNECTION_DEV)'
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "Adding azure ml extension..."
            az extension add -n ml --allow-preview false
            echo "Verifying the deployment..."
            az ml workspace show --name $WORKSPACE_NAME --resource-group $RESOURCE_GROUP_NAME
        env:
          WORKSPACE_NAME: '${{ parameters.workspace_name }}'
          RESOURCE_GROUP_NAME: '${{ parameters.resource_group_name }}'

      - task: AzureCLI@2
        displayName: 'Deploy ML pipeline components'
        workingDirectory: '$(Build.SourcesDirectory)'
        inputs:
          azureSubscription: '$(AZURE_RM_SVC_CONNECTION_DEV)'
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "Running register_ml_service_assets script..."
            python -m ./src/scripts/register_ml_service_assets.py
        env:
          WORKSPACE_NAME: '${{ parameters.workspace_name }}'
          RESOURCE_GROUP_NAME: '${{ parameters.resource_group_name }}'



